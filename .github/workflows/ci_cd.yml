name: CI

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize, edited, closed]
  push:
    tags:
      - "*"
    branches:
      - main


permissions:
  contents: read
  pull-requests: read

env:
  MAIN_PYTHON_VERSION : '3.13'
  PACKAGE_NAME: 'ansys_sphinx_theme'
  DOCUMENTATION_CNAME: 'sphinxdocs.ansys.com'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  labeler:
    name: "Labels"
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: "Update labels"
        uses: micnncim/action-label-syncer@3abd5ab72fda571e69fffd97bd4e0033dd5f495c # v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Label pull-request"
        uses: actions/labeler@634933edcd8ababfe52f92936142cc22ac488b1b # v6.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}


  changelog-fragment:
    name: "Create changelog fragment"
    needs: [labeler]
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    steps:
    - uses: ansys/actions/doc-changelog@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
      with:
        token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
        use-conventional-commits: true
        use-default-towncrier-config: true
        bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
        bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  code-style:
    name: Code style
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    needs: "changelog-fragment"
    steps:
      - name: "Run Ansys code style checks"
        uses: ansys/actions/code-style@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: Doc style
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    needs: "changelog-fragment"
    steps:
      - name: "Run Ansys documentation style checks"
        uses: ansys/actions/doc-style@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  vulnerabilities:
    name: Vulnerabilities
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: ansys/actions/check-vulnerabilities@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          python-package-name: ${{ env.PACKAGE_NAME }}
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          dev-mode: ${{ github.ref != 'refs/heads/main' }}

  actions-security:
    name: Actions Security
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
      - uses: ansys/actions/check-actions-security@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          generate-summary: true
          token: ${{ secrets.GITHUB_TOKEN }}
          auditing-level: 'high'

  update-changelog:
    name: "Update CHANGELOG (on release)"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: ansys/actions/doc-deploy-changelog@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  doc-build:
    name: Doc building
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    needs: doc-style
    steps:
      - name: "Run Ansys documentation building action"
        uses: ansys/actions/doc-build@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          group-dependencies-name: 'doc'
          optional-dependencies-name: ''
          add-pdf-html-docs-as-assets: true
          requires-xvfb: true
          dependencies: 'pandoc'

  doc-deploy-pr:
    name: "Deploy PR documentation"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: [doc-build]
    # Run when the PR is closed i.e. when docs job is skipped
    if: |
      always() &&
      (needs.doc-build.result == 'success' || needs.doc-build.result == 'skipped')
    steps:
      - uses: ansys/actions/doc-deploy-pr@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}
          maximum-pr-doc-deployments: 20

  doc-deploy-development:
    name: Doc dev version deploy
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build-library
    steps:
      - name: "Deploy developers documentation"
        uses: ansys/actions/doc-deploy-dev@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
            cname: ${{ env.DOCUMENTATION_CNAME }}
            token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
            bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
            bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  doc-deploy-stable:
    name: Doc stable version deploy
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: "Deploy stable documentation"
        uses: ansys/actions/doc-deploy-stable@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  smoke-tests:
    name: Build and smoke tests
    runs-on: ${{ matrix.os }}
    if: github.event.action != 'closed'
    needs: [code-style]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
        should-release:
          - ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
        exclude:
          - should-release: false
            os: macos-latest
    steps:
      - name: "Build wheelhouse and perform smoke test"
        uses: ansys/actions/build-wheelhouse@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          whitelist-license-check: "Sphinx" # This has BSD licence , but check failed

  build-library:
    name: "Build library"
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    needs: [doc-build, smoke-tests]
    steps:
      - name: "Build library source and wheel artifacts"
        uses: ansys/actions/build-library@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          library-name: ${{ env.PACKAGE_NAME }}

  release:
    name: "Release project to private PyPI, public PyPI and GitHub"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [build-library, update-changelog]
    environment: release
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    steps:

      - name: "Release to the private PyPI repository"
        uses: ansys/actions/release-pypi-private@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          twine-username: "__token__"
          twine-token: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}

      - name: "Download the library artifacts from build-library step"
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: ${{ env.PACKAGE_NAME }}-artifacts
          path: ${{ env.PACKAGE_NAME }}-artifacts

      - name: "Upload artifacts to PyPI using trusted publisher"
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        with:
          repository-url: "https://upload.pypi.org/legacy/"
          print-hash: true
          packages-dir: ${{ env.PACKAGE_NAME }}-artifacts
          skip-existing: false

      - name: "Release to GitHub"
        uses: ansys/actions/release-github@c2fa7c93f6883114e0e643599431b33d29f0b13f # v10.1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          library-name: ${{ env.PACKAGE_NAME }}
          changelog-release-notes: true
